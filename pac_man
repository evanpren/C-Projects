
#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <stdint.h>
#include "LPC17xx.H"                         /* LPC17xx definitions           */
#include "GLCD.h"
#include "GLCD_UTILS.h"
#define _FI        1                        /* Font index 16x24               */


uint32_t kbd_val;

static int end = 1;
static int score=0;

char init_board[22][19] = {
	{'B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B'},  //From the top row 1
	{'B','C','C','C','C','C','C','C','C','B','C','C','C','C','C','C','C','C','B'},  //row 2
	{'B','D','B','B','C','B','B','B','C','B','C','B','B','B','C','B','B','D','B'},  //row 3
	{'B','C','B','B','C','B','B','B','C','B','C','B','B','B','C','B','B','C','B'},  //row 4
	{'B','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','B'},  //row 5
	{'B','C','B','B','C','B','C','B','B','B','B','B','C','B','C','B','B','C','B'},  //row 6
	{'B','C','C','C','C','B','C','C','C','B','C','C','C','B','C','C','C','C','B'},  //row 7
	{'B','B','B','B','C','B','B','B','A','B','A','B','B','B','C','B','B','B','B'},  //row 8
	{'B','B','B','B','C','B','A','A','A','A','A','A','A','B','C','B','B','B','B'},  //row 9
	{'B','B','B','B','C','B','A','B','B','B','B','B','A','B','C','B','B','B','B'},  //row 10
	{'A','A','A','A','C','A','A','B','A','A','A','B','A','A','C','A','A','A','A'},  //row 11
	{'B','B','B','B','C','B','A','B','B','B','B','B','A','B','C','B','B','B','B'},  //row 12
	{'B','B','B','B','C','B','A','A','A','A','A','A','A','B','C','B','B','B','B'},  //row 13
	{'B','B','B','B','C','B','A','B','B','B','B','B','A','B','C','B','B','B','B'},  //row 14
	{'B','C','C','C','C','C','C','C','C','B','C','C','C','C','C','C','C','C','B'},  //row 15
	{'B','C','B','B','C','B','B','B','C','B','C','B','B','B','C','B','B','C','B'},  //row 16
	{'B','D','C','B','C','C','C','C','C','C','C','C','C','C','C','B','C','D','B'},  //row 17
	{'B','B','C','B','C','B','C','B','B','B','B','B','C','B','C','B','C','B','B'},  //row 18
	{'B','C','C','C','C','B','C','C','C','B','C','C','C','B','C','C','C','C','B'},  //row 19
	{'B','C','B','B','B','B','B','B','C','B','C','B','B','B','B','B','B','C','B'},  //row 20
	{'B','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','B'},  //row 21
	{'B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B'}   //row 22
};

	
	
	
	
int init_ghostA[4][11] = {
			{90,130,90,130,12,0,0,0,0,0,0},  //red ghost
			{90,90,90,90,13,0,0,0,0,0,0},    //magenta ghost
			{60,110,60,110,10,0,0,0,0,0,0},  //olive ghost
			{120,110,120,110,2,0,0,0,0,0,0}  //dark green ghost
			};


static char board[22][19] = {
	{'B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B'},  //From the top row 1
	{'B','C','C','C','C','C','C','C','C','B','C','C','C','C','C','C','C','C','B'},  //row 2
	{'B','D','B','B','C','B','B','B','C','B','C','B','B','B','C','B','B','D','B'},  //row 3
	{'B','C','B','B','C','B','B','B','C','B','C','B','B','B','C','B','B','C','B'},  //row 4
	{'B','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','B'},  //row 5
	{'B','C','B','B','C','B','C','B','B','B','B','B','C','B','C','B','B','C','B'},  //row 6
	{'B','C','C','C','C','B','C','C','C','B','C','C','C','B','C','C','C','C','B'},  //row 7
	{'B','B','B','B','C','B','B','B','A','B','A','B','B','B','C','B','B','B','B'},  //row 8
	{'B','B','B','B','C','B','A','A','A','A','A','A','A','B','C','B','B','B','B'},  //row 9
	{'B','B','B','B','C','B','A','B','B','B','B','B','A','B','C','B','B','B','B'},  //row 10
	{'A','A','A','A','C','A','A','B','A','A','A','B','A','A','C','A','A','A','A'},  //row 11
	{'B','B','B','B','C','B','A','B','B','B','B','B','A','B','C','B','B','B','B'},  //row 12
	{'B','B','B','B','C','B','A','A','A','A','A','A','A','B','C','B','B','B','B'},  //row 13
	{'B','B','B','B','C','B','A','B','B','B','B','B','A','B','C','B','B','B','B'},  //row 14
	{'B','C','C','C','C','C','C','C','C','B','C','C','C','C','C','C','C','C','B'},  //row 15
	{'B','C','B','B','C','B','B','B','C','B','C','B','B','B','C','B','B','C','B'},  //row 16
	{'B','D','C','B','C','C','C','C','C','C','C','C','C','C','C','B','C','D','B'},  //row 17
	{'B','B','C','B','C','B','C','B','B','B','B','B','C','B','C','B','C','B','B'},  //row 18
	{'B','C','C','C','C','B','C','C','C','B','C','C','C','B','C','C','C','C','B'},  //row 19
	{'B','C','B','B','B','B','B','B','C','B','C','B','B','B','B','B','B','C','B'},  //row 20
	{'B','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','B'},  //row 21
	{'B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B'}   //row 22
};

	
static int pellet[10][10] = {
		{'A','A','A','A','A','A','A','A','A','A'},
		{'A','A','A','A','A','A','A','A','A','A'},
		{'A','A','A','A','B','B','B','A','A','A'},
		{'A','A','A','B','B','B','B','B','A','A'},
		{'A','A','A','B','B','B','B','B','A','A'},
		{'A','A','A','B','B','B','B','B','A','A'},
		{'A','A','A','A','B','B','B','A','A','A'},
		{'A','A','A','A','A','A','A','A','A','A'},
		{'A','A','A','A','A','A','A','A','A','A'},
		{'A','A','A','A','A','A','A','A','A','A'}
	};
static int S_pellet[10][10] = {
		{'A','A','A','A','A','A','A','A','A','A'},
		{'A','A','A','A','B','B','B','A','A','A'},
		{'A','A','A','B','B','B','B','B','A','A'},
		{'A','A','B','B','B','B','B','B','B','A'},
		{'A','A','B','B','B','B','B','B','B','A'},
		{'A','A','B','B','B','B','B','B','B','A'},
		{'A','A','A','B','B','B','B','B','A','A'},
		{'A','A','A','A','B','B','B','A','A','A'},
		{'A','A','A','A','A','A','A','A','A','A'},
		{'A','A','A','A','A','A','A','A','A','A'}
	};

static char ghost_shp[10][10]={
	{'A','M','A','A','M','M','A','A','M','M'},	
	{'M','M','A','M','M','M','M','A','M','M'},
	{'M','M','M','M','M','M','M','M','M','M'},
	{'M','M','M','M','M','M','M','M','M','M'},
	{'M','M','M','M','M','M','M','M','M','M'},
	{'A','M','A','P','M','M','A','P','M','A'},	
	{'A','M','P','P','M','M','P','P','M','A'},	
	{'A','A','M','M','M','M','M','M','A','A'},
	{'A','A','A','M','M','M','M','A','A','A'}				//last*/
};

static int mrs_pacman[10][10]={
	{'A','A','A','O','O','O','O','O','A','A'},
	{'A','A','O','O','O','O','O','O','O','A'},
	{'A','O','O','A','O','O','M','M','M','A'},	
	{'A','O','O','O','O','A','A','A','A','A'},		
	{'A','O','O','O','O','O','A','A','A'},	
	{'A','O','O','O','O','O','M','A','A','A'},
	{'M','M','O','A','J','O','O','M','M','A'},	
	{'M','J','M','O','A','O','O','O','O','A'},	
	{'A','M','J','O','O','O','O','O','A','A',},	
	{'A','A','M','M','A','A','A','A','A','A'}		//last							
};





char pL[20][20] = {
// A B C D E F G H I J K L M N O P Q R S T
	{'A','A','A','D','D','D','D','A','A','A','A','A','A','A','A','A','A','A','A','A'},  //1
	{'A','A','A','D','D','D','D','A','A','A','A','A','A','A','A','A','A','A','A','A'},  //2
	{'A','A','D','D','D','D','D','D','C','C','C','C','C','A','A','A','A','A','A','A'},  //3
	{'A','A','D','C','C','D','D','D','C','C','C','C','C','C','C','A','A','A','A','A'},  //4
	{'D','D','B','B','B','C','C','C','C','C','C','C','C','C','C','C','A','A','A','A'},  //5
	{'D','D','B','B','D','C','C','A','A','C','C','C','C','C','C','D','D','A','A','A'},  //6
	{'D','D','D','D','C','C','A','B','B','C','C','C','C','C','D','D','D','A','A','A'},  //7
	{'D','D','D','D','C','C','C','B','B','C','C','C','A','A','A','A','A','A','A','A'},  //8
	{'A','A','D','D','C','C','C','C','C','C','A','A','A','A','A','A','A','A','A','A'},  //9
	{'A','A','C','C','C','C','C','C','A','A','A','A','A','A','A','A','A','A','A','A'},  //10
	{'A','A','C','C','C','C','C','C','C','C','A','A','A','A','A','A','A','A','A','A'},  //11
	{'A','A','C','C','C','C','C','C','C','C','C','C','A','A','A','A','A','A','A','A'},  //12
	{'A','A','C','C','C','A','A','C','C','C','C','C','C','C','D','D','D','A','A','A'},  //13
	{'A','A','A','C','C','A','A','C','C','C','C','C','C','C','C','D','D','A','A','A'},  //14
	{'A','A','A','C','C','C','C','C','C','C','C','C','C','C','C','C','A','A','A','A'},  //15
	{'A','A','A','C','C','C','C','C','C','C','C','C','C','C','C','C','A','A','A','A'},  //16
	{'A','A','A','A','C','C','C','C','C','C','C','C','C','C','C','A','A','A','A','A'},  //17
  {'A','A','A','A','A','A','C','C','C','C','C','C','A','A','A','A','A','A','A','A'},  //18
  {'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},  //19
  {'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},  //20
};

char L[20][20] = {
// A B C D E F G H I J K L M N O P Q R S T
	{'A','A','B','B','B','B','B','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //1
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //2
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //3
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //4
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //5
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //6
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //7
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //8
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //9
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //10
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //11
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //12
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //13
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //14
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //15
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //16
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //17
  {'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //18
  {'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //19
  {'A','A','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','A','A'}  //20
};

char I[20][20] = {
// A B C D E F G H I J K L M N O P Q R S T
	{'A','A','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //1
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //2
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //3
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //4
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //5
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //6
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //7
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //8
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //9
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //10
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //11
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //12
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //13
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //14
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //15
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //16
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //17
  {'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //18
  {'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //19
  {'A','A','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //20
};

char V[20][20] = {
// A B C D E F G H I J K L M N O P Q R S T
	{'A','B','B','B','B','B','B','A','A','A','A','A','B','B','B','B','B','B','A','A'},  //1
	{'A','B','B','C','C','C','B','A','A','A','A','A','B','C','C','C','B','B','A','A'},  //2
	{'A','B','B','C','C','C','B','A','A','A','A','A','B','C','C','C','B','B','A','A'},  //3
	{'A','B','B','C','C','C','B','A','A','A','A','A','B','C','C','C','B','B','A','A'},  //4
	{'A','B','B','C','C','C','B','A','A','A','A','A','B','C','C','C','B','B','A','A'},  //5
	{'A','B','B','C','C','C','B','A','A','A','A','A','B','C','C','C','B','B','A','A'},  //6
	{'A','B','B','C','C','C','B','A','A','A','A','A','B','C','C','C','B','B','A','A'},  //7
	{'A','A','B','B','C','C','C','B','A','A','A','B','C','C','C','B','B','A','A','A'},  //8
	{'A','A','B','B','C','C','C','B','A','A','A','B','C','C','C','B','B','A','A','A'},  //9
	{'A','A','B','B','C','C','C','B','A','A','A','B','C','C','C','B','B','A','A','A'},  //10
	{'A','A','B','B','C','C','C','C','B','A','B','C','C','C','C','B','B','A','A','A'},  //11
	{'A','A','A','B','B','C','C','C','B','A','B','C','C','C','B','B','A','A','A','A'},  //12
	{'A','A','A','B','B','C','C','C','B','A','B','C','C','C','B','B','A','A','A','A'},  //13
	{'A','A','A','A','B','B','C','C','B','A','B','C','C','B','B','A','A','A','A','A'},  //14
	{'A','A','A','A','B','B','C','C','C','B','C','C','C','B','B','A','A','A','A','A'},  //15
	{'A','A','A','A','A','B','B','C','C','C','C','C','B','B','A','A','A','A','A','A'},  //16
	{'A','A','A','A','A','B','B','C','C','C','C','C','B','B','A','A','A','A','A','A'},  //17
  {'A','A','A','A','A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A'},  //18
  {'A','A','A','A','A','A','A','B','B','C','B','B','A','A','A','A','A','A','A','A'},  //19
  {'A','A','A','A','A','A','A','A','B','B','B','A','A','A','A','A','A','A','A','A'},  //20
};

char E[20][20] = {
// A B C D E F G H I J K L M N O P Q R S T
	{'A','A','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //1
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //2
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //3
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //4
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //5
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //6
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //7
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //8
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //9
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //10
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //11
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //12
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //13
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //14
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //15
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //16
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //17
  {'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //18
  {'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //19
  {'A','A','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //20
};

char S[20][20] = {
// A B C D E F G H I J K L M N O P Q R S T
	{'A','A','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //1
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //2
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //3
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //4
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //5
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //6
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //7
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //8
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //9
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //10
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //11
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //12
	{'A','A','B','B','B','B','B','B','B','B','B','B','B','C','C','C','B','B','A','A'},  //13
	{'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //14
	{'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //15
	{'A','A','B','B','B','B','B','B','B','B','B','B','B','C','C','C','B','B','A','A'},  //16
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //17
  {'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //18
  {'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //19
  {'A','A','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //20
};

char SEMI[20][20] = {
// A B C D E F G H I J K L M N O P Q R S T
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},  //1
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},  //2
	{'A','A','A','A','A','B','B','A','A','A','A','A','A','A','A','A','A','A','A','A'},  //3
	{'A','A','A','A','B','C','C','B','A','A','A','A','A','A','A','A','A','A','A','A'},  //4
	{'A','A','A','B','C','C','C','C','B','A','A','A','A','A','A','A','A','A','A','A'},  //5
	{'A','A','A','B','C','C','C','C','B','A','A','A','A','A','A','A','A','A','A','A'},  //6
	{'A','A','A','B','C','C','C','C','B','A','A','A','A','A','A','A','A','A','A','A'},  //7
	{'A','A','A','A','B','C','C','B','A','A','A','A','A','A','A','A','A','A','A','A'},  //8
	{'A','A','A','A','A','B','B','A','A','A','A','A','A','A','A','A','A','A','A','A'},  //9
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},  //10
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},  //11
	{'A','A','A','A','A','B','B','A','A','A','A','A','A','A','A','A','A','A','A','A'},  //12
	{'A','A','A','A','B','C','C','B','A','A','A','A','A','A','A','A','A','A','A','A'},  //13
	{'A','A','A','B','C','C','C','C','B','A','A','A','A','A','A','A','A','A','A','A'},  //14
	{'A','A','A','B','C','C','C','C','B','A','A','A','A','A','A','A','A','A','A','A'},  //15
	{'A','A','A','B','C','C','C','C','B','A','A','A','A','A','A','A','A','A','A','A'},  //16
	{'A','A','A','A','B','C','C','B','A','A','A','A','A','A','A','A','A','A','A','A'},  //17
	{'A','A','A','A','A','B','B','A','A','A','A','A','A','A','A','A','A','A','A','A'},  //18
  {'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},  //19
  {'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},  //20
};

char C[20][20] = {
// A B C D E F G H I J K L M N O P Q R S T
	{'A','A','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //1
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //2
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //3
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //4
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //5
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //6
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //7
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //8
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //9
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //10
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //11
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //12
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //13
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //14
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //15
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //16
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //17
  {'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //18
  {'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //19
  {'A','A','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //20
};

char O[20][20] = {
// A B C D E F G H I J K L M N O P Q R S T
	{'A','A','A','A','A','B','B','B','B','B','B','B','B','B','B','A','A','A','A','A'},  //1
	{'A','A','A','A','B','B','C','C','C','C','C','C','C','C','B','B','A','A','A','A'},  //2
	{'A','A','A','B','B','C','C','C','C','C','C','C','C','C','C','B','B','A','A','A'},  //3
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //4
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //5
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','C','C','C','B','B','A','A'},  //6
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //7
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //8
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //9
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //10
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //11
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //12
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //13
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //14
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','C','C','C','B','B','A','A'},  //15
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //16
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //17
  {'A','A','A','B','B','C','C','C','C','C','C','C','C','C','C','B','B','A','A','A'},  //18
  {'A','A','A','A','B','B','C','C','C','C','C','C','C','C','B','B','A','A','A','A'},  //19
  {'A','A','A','A','A','B','B','B','B','B','B','B','B','B','B','A','A','A','A','A'},  //20
};

char R[20][20] = {
// A B C D E F G H I J K L M N O P Q R S T
	{'A','A','B','B','B','B','B','B','B','B','B','B','B','A','A','A','A','A','A','A'},  //1
	{'A','A','B','B','C','C','C','C','C','C','C','C','B','B','A','A','A','A','A','A'},  //2
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','B','B','A','A','A','A','A'},  //3
	{'A','A','B','B','C','C','B','B','B','B','B','B','C','C','B','B','A','A','A','A'},  //4
	{'A','A','B','B','C','C','B','A','A','A','A','A','B','C','C','B','B','A','A','A'},  //5
	{'A','A','B','B','C','C','B','A','A','A','A','A','B','C','C','C','B','A','A','A'},  //6
	{'A','A','B','B','C','C','B','A','A','A','A','A','B','C','C','C','B','A','A','A'},  //7
	{'A','A','B','B','C','C','B','A','A','A','A','A','B','C','C','C','B','A','A','A'},  //8
	{'A','A','B','B','C','C','B','B','B','B','B','B','C','C','C','C','B','A','A','A'},  //9
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A','A'},  //10
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','B','B','A','A','A','A'},  //11
	{'A','A','B','B','C','C','C','C','C','C','C','C','B','B','A','A','A','A','A','A'},  //12
	{'A','A','B','B','C','C','C','C','B','B','B','B','A','A','A','A','A','A','A','A'},  //13
	{'A','A','B','B','C','C','C','C','C','B','B','A','A','A','A','A','A','A','A','A'},  //14
	{'A','A','B','B','C','C','B','B','C','C','B','B','A','A','A','A','A','A','A','A'},  //15
	{'A','A','B','B','C','C','B','B','B','C','C','B','B','A','A','A','A','A','A','A'},  //16
	{'A','A','B','B','C','C','B','A','B','B','C','C','B','B','A','A','A','A','A','A'},  //17
  {'A','A','B','B','C','C','B','A','A','B','B','C','C','B','B','A','A','A','A','A'},  //18
  {'A','A','B','B','C','C','B','A','A','A','B','B','C','C','B','B','A','A','A','A'},  //19
  {'A','A','B','B','C','C','B','A','A','A','A','B','B','C','C','B','B','A','A','A'}   //20
};

char G[20][20] = {
// A B C D E F G H I J K L M N O P Q R S T
	{'A','A','A','A','A','B','B','B','B','B','B','B','B','B','B','B','A','A','A','A'},  //1
	{'A','A','A','A','B','C','C','C','C','C','C','C','C','C','C','C','B','A','A','A'},  //2
	{'A','A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //3
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //4
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //5
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //6
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //7
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //8
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //9
	{'A','A','B','B','C','C','C','B','A','A','A','B','B','B','B','B','B','B','A','A'},  //10
	{'A','A','B','B','C','C','C','B','A','A','A','B','C','C','C','C','C','B','A','A'},  //11
	{'A','A','B','B','C','C','C','B','A','A','A','B','C','C','C','C','C','B','A','A'},  //12
	{'A','A','B','B','C','C','C','B','A','A','A','B','B','B','B','C','C','B','A','A'},  //13
	{'A','A','B','B','C','C','C','B','A','A','A','A','A','B','B','C','C','B','A','A'},  //14
	{'A','A','B','B','C','C','C','B','A','A','A','A','A','B','B','C','C','B','A','A'},  //15
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','B','C','C','C','B','A','A'},  //16
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //17
  {'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A','A'},  //18
  {'A','A','A','B','B','C','C','C','C','C','C','C','C','C','B','B','A','A','A','A'},  //19
  {'A','A','A','A','B','B','B','B','B','B','B','B','B','B','B','A','A','A','A','A'},  //20
};

char A[20][20] = {
// A B C D E F G H I J K L M N O P Q R S T
	{'A','A','A','A','A','A','A','A','B','B','B','A','A','A','A','A','A','A','A','A'},  //20
	{'A','A','A','A','A','A','A','B','B','C','B','B','A','A','A','A','A','A','A','A'},  //19
	{'A','A','A','A','A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A'},  //18
	{'A','A','A','A','A','B','B','C','C','C','C','C','B','B','A','A','A','A','A','A'},  //17
  {'A','A','A','A','A','B','B','C','C','C','C','C','B','B','A','A','A','A','A','A'},  //16
	{'A','A','A','A','B','B','C','C','C','B','C','C','C','B','B','A','A','A','A','A'},  //15
	{'A','A','A','A','B','B','C','C','B','A','B','C','C','B','B','A','A','A','A','A'},  //14
	{'A','A','A','B','B','C','C','C','B','A','B','C','C','C','B','B','A','A','A','A'},  //13
	{'A','A','A','B','B','C','C','C','B','A','B','C','C','C','B','B','A','A','A','A'},  //12
	{'A','A','B','B','C','C','C','C','B','A','B','C','C','C','C','B','B','A','A','A'},  //11
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A','A'},  //10
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A','A'},  //9
	{'A','A','B','B','C','C','C','C','B','B','B','C','C','C','C','B','B','A','A','A'},  //8
	{'A','B','B','C','C','C','B','A','A','A','A','A','B','C','C','C','B','B','A','A'},  //7
	{'A','B','B','C','C','C','B','A','A','A','A','A','B','C','C','C','B','B','A','A'},  //6
	{'A','B','B','C','C','C','B','A','A','A','A','A','B','C','C','C','B','B','A','A'},  //5
	{'A','B','B','C','C','C','B','A','A','A','A','A','B','C','C','C','B','B','A','A'},  //4
	{'A','B','B','C','C','C','B','A','A','A','A','A','B','C','C','C','B','B','A','A'},  //3
	{'A','B','B','C','C','C','B','A','A','A','A','A','B','C','C','C','B','B','A','A'},  //2
	{'A','B','B','B','B','B','B','A','A','A','A','A','B','B','B','B','B','B','A','A'},  //1
};

char M[20][20] = {
// A B C D E F G H I J K L M N O P Q R S T
	{'A','A','B','B','B','B','B','B','A','A','A','A','A','B','B','B','B','B','A','A'},  //1
	{'A','A','B','B','C','C','C','B','A','A','A','A','B','C','C','C','B','B','A','A'},  //2
	{'A','A','B','B','C','C','C','B','A','A','A','A','B','C','C','C','B','B','A','A'},  //3
	{'A','A','B','B','C','C','C','C','B','A','A','B','C','C','C','C','B','B','A','A'},  //4
	{'A','A','B','B','C','C','C','C','B','A','A','B','C','C','C','C','B','B','A','A'},  //5
	{'A','A','B','B','C','C','C','C','C','B','B','C','C','C','C','C','B','B','A','A'},  //6
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //7
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //8
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //9
	{'A','A','B','B','C','C','B','B','C','C','C','C','B','B','C','C','B','B','A','A'},  //10
	{'A','A','B','B','C','C','B','A','B','C','C','B','A','B','C','C','B','B','A','A'},  //11
	{'A','A','B','B','C','C','B','A','B','C','C','B','A','B','C','C','B','B','A','A'},  //12
	{'A','A','B','B','C','C','B','A','A','B','B','A','A','B','C','C','B','B','A','A'},  //13
	{'A','A','B','B','C','C','B','A','A','A','A','A','A','B','C','C','B','B','A','A'},  //14
	{'A','A','B','B','C','C','B','A','A','A','A','A','A','B','C','C','B','B','A','A'},  //15
	{'A','A','B','B','C','C','B','A','A','A','A','A','A','B','C','C','B','B','A','A'},  //16
	{'A','A','B','B','C','C','B','A','A','A','A','A','A','B','C','C','B','B','A','A'},  //17
  {'A','A','B','B','C','C','B','A','A','A','A','A','A','B','C','C','B','B','A','A'},  //18
  {'A','A','B','B','C','C','B','A','A','A','A','A','A','B','C','C','B','B','A','A'},  //19
  {'A','A','B','B','C','C','B','A','A','A','A','A','A','B','C','C','B','B','A','A'},  //20
};



char CLR[20][20] = {
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'},
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A','A'}
};

char T[20][20] = {
// A B C D E F G H I J K L M N O P Q R S T
	{'A','A','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //1
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //2
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //3
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //4
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //5
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //6
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //7
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //8
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //9
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //10
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //11
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //12
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //13
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //14
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //15
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //16
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //17
  {'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //18
  {'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //19
  {'A','A','A','A','A','A','B','B','B','B','B','B','B','B','A','A','A','A','A','A'},  //20
};


char ZERO[20][20] = {
// A B C D E F G H I J K L M N O P Q R S T
	{'A','A','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //1
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //2
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','A','A','A'},  //3
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //4
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //5
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','C','C','C','B','B','A','A'},  //6
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //7
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //8
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //9
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //10
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //11
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //12
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //13
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //14
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','C','C','C','B','B','A','A'},  //15
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //16
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //17
  {'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //18
  {'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //19
  {'A','A','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //20
};


char ONE[20][20] = {
// A B C D E F G H I J K L M N O P Q R S T
	{'A','A','A','A','A','A','B','B','B','B','B','B','B','B','A','A','A','A','A','A'},  //1
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //2
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //3
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //4
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //5
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //6
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //7
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //8
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //9
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //10
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //11
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //12
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //13
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //14
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //15
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //16
	{'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //17
  {'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //18
  {'A','A','A','A','A','A','B','B','C','C','C','C','B','B','A','A','A','A','A','A'},  //19
  {'A','A','A','A','A','A','B','B','B','B','B','B','B','B','A','A','A','A','A','A'},  //20
};



char TWO[20][20] = {
// A B C D E F G H I J K L M N O P Q R S T
	{'A','A','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //1
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //2
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //3
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //4
	{'A','A','B','B','B','B','B','B','B','B','B','B','B','C','C','C','B','B','A','A'},  //5
	{'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //6
	{'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //7
	{'A','A','A','B','B','B','B','B','B','B','B','B','B','C','C','C','B','B','A','A'},  //8
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //9
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //10
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //11
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //12
	{'A','A','B','B','C','C','C','B','A','A','A','A','A','A','A','A','A','A','A','A'},  //13
	{'A','A','B','B','C','C','C','B','A','A','A','A','A','A','A','A','A','A','A','A'},  //14
	{'A','A','B','B','C','C','C','B','A','A','A','A','A','A','A','A','A','A','A','A'},  //15
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','B','B','B','B','A','A','A'},  //16
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //17
  {'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //18
  {'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //19
  {'A','A','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //20
};


char THREE[20][20] = {
// A B C D E F G H I J K L M N O P Q R S T
	{'A','A','A','A','A','B','B','B','B','B','B','B','B','B','B','B','A','A','A','A'},  //1
	{'A','A','A','A','B','B','C','C','C','C','C','C','C','C','C','B','B','A','A','A'},  //2
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //3
	{'A','A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //4
	{'A','A','A','A','B','B','B','B','B','B','B','B','B','C','C','C','B','B','A','A'},  //5
	{'A','A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','B','B','A','A'},  //6
	{'A','A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','B','B','A','A'},  //7
	{'A','A','A','A','B','B','B','B','B','B','B','B','B','C','C','C','B','A','A','A'},  //8
	{'A','A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','A','A','A','A'},  //9
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','A','A','A'},  //10
	{'A','A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //11
	{'A','A','A','A','B','B','B','B','B','B','B','B','B','C','C','C','B','B','A','A'},  //12
	{'A','A','A','A','A','A','A','A','A','A','A','A','B','C','C','C','B','A','A','A'},  //13
	{'A','A','A','A','A','A','A','A','A','A','A','A','B','C','C','C','A','A','A','A'},  //14
	{'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','A','A','A'},  //15
	{'A','A','A','A','B','B','B','B','B','B','B','B','C','C','C','C','B','B','A','A'},  //16
	{'A','A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //17
  {'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //18
  {'A','A','A','A','B','B','C','C','C','C','C','C','C','C','C','B','B','A','A','A'},  //19
  {'A','A','A','A','A','B','B','B','B','B','B','B','B','B','B','B','A','A','A','A'},  //20
};





char FOUR[20][20] = {
// A B C D E F G H I J K L M N O P Q R S T
	{'A','A','B','B','B','B','B','B','B','A','B','B','B','B','B','B','B','B','A','A'},  //1
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //2
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //3
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //4
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //5
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //6
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','C','C','C','B','B','A','A'},  //7
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //8
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //9
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //10
	{'A','A','B','B','B','B','B','B','B','B','B','B','C','C','C','C','B','B','A','A'},  //11
	{'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //12
	{'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //13
	{'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //14
	{'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //15
	{'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //16
	{'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //17
  {'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //18
  {'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //19
  {'A','A','A','A','A','A','A','A','A','A','A','B','B','B','B','B','B','B','A','A'},  //20
};
char FIVE[20][20] = {
// A B C D E F G H I J K L M N O P Q R S T
	{'A','A','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //1
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //2
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //3
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //4
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //5
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //6
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //7
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //8
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //9
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //10
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //11
	{'A','A','B','B','B','B','B','B','B','B','B','B','B','C','C','C','B','B','A','A'},  //12
	{'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //13
	{'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //14
	{'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //15
	{'A','A','B','B','B','B','B','B','B','B','B','B','B','C','C','C','B','B','A','A'},  //16
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //17
  {'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //18
  {'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //19
  {'A','A','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //20
};


char SIX[20][20] = {
// A B C D E F G H I J K L M N O P Q R S T
	{'A','A','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //1
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //2
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //3
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //4
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //5
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //6
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //7
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //8
	{'A','A','B','B','C','C','C','B','B','A','A','A','A','A','A','A','A','A','A','A'},  //9
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //10
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','C','B','A','A'},  //11
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','C','B','A','A'},  //12
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','B','B','C','C','B','A','A'},  //13
	{'A','A','B','B','C','C','C','B','A','A','A','A','A','A','B','C','C','B','A','A'},  //14
	{'A','A','B','B','C','C','C','B','A','A','A','A','A','A','B','C','C','B','A','A'},  //15
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','B','B','C','C','B','A','A'},  //16
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','C','B','A','A'},  //17
  {'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','C','B','A','A'},  //18
  {'A','A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','A','A'},  //19
  {'A','A','A','A','B','B','B','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //20
};




char SEVEN[20][20] = {
// A B C D E F G H I J K L M N O P Q R S T
	{'A','A','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //7
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //8
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //9
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //10
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','C','C','C','B','B','A','A'},  //11
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //5
	{'A','A','B','B','B','B','B','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //6
	{'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //7
	{'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //8
	{'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //9
	{'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //10
	{'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //12
	{'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //13
	{'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //14
	{'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //15
	{'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //16
	{'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //17
  {'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //18
  {'A','A','A','A','A','A','A','A','A','A','A','B','B','C','C','C','B','B','A','A'},  //19
  {'A','A','A','A','A','A','A','A','A','A','A','B','B','B','B','B','B','B','A','A'},  //20
};

char EIGHT[20][20] = {
// A B C D E F G H I J K L M N O P Q R S T
	{'A','A','A','A','B','B','B','B','B','B','B','B','B','B','B','B','A','A','A','A'},  //1
	{'A','A','A','B','V','C','C','C','C','C','C','C','C','C','C','B','B','A','A','A'},  //2
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','A','A','A'},  //3
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //4
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','C','C','C','B','B','A','A'},  //5
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //6
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //7
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //8
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','C','C','C','B','B','A','A'},  //9
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //10
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //11
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','C','C','C','B','B','A','A'},  //12
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //13
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //14
	{'A','A','B','B','C','C','C','B','B','A','A','B','B','C','C','C','B','B','A','A'},  //15
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','C','C','C','B','B','A','A'},  //16
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //17
  {'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','B','A','A'},  //18
  {'A','A','A','B','B','C','C','C','C','C','C','C','C','C','C','B','B','A','A','A'},  //19
  {'A','A','A','A','B','B','B','B','B','B','B','B','B','B','B','B','A','A','A','A'},  //20
};

char NINE[20][20] = {
	{'A','A','A','A','B','B','B','B','B','B','B','B','B','B','B','B','B','B','A','A'},  //20
	{'A','A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','B','A','A'},  //19
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','C','B','A','A'},  //18	
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','C','B','A','A'},  //17	
	{'A','A','B','B','C','C','B','B','B','B','B','B','B','B','C','C','C','B','A','A'},  //16	
	{'A','A','B','B','C','C','B','A','A','A','A','A','A','B','C','C','C','B','A','A'},
	{'A','A','B','B','C','C','B','A','A','A','A','A','A','B','C','C','C','B','A','A'},  //15
	{'A','A','B','B','C','C','B','A','A','A','A','A','A','B','C','C','C','B','A','A'},  //14
	{'A','A','B','B','C','C','C','B','B','B','B','B','B','B','C','C','C','B','A','A'},  //13
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','C','B','A','A'},  //12
	{'A','A','B','B','C','C','C','C','C','C','C','C','C','C','C','C','C','B','A','A'},  //11
	{'A','A','B','B','B','B','B','B','B','B','B','B','B','B','C','C','C','B','A','A'},  //10
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','B','C','C','C','B','A','A'},  //9
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','B','C','C','C','B','A','A'},  //8
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','B','C','C','C','B','A','A'},  //7
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','B','C','C','C','B','A','A'},  //5
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','B','C','C','C','B','A','A'},  //4
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','B','C','C','C','B','A','A'},  //3
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','B','C','C','C','B','A','A'},  //2		
	{'A','A','A','A','A','A','A','A','A','A','A','A','A','B','B','B','B','B','A','A'},  //1
	
  
};

volatile unsigned short lcd_colors[] = { // 16 colors
    Black,Navy,DarkGreen,DarkCyan,Maroon,Purple,Olive,
    LightGrey,DarkGrey,Blue,Green,Cyan,Red,Magenta,Yellow,White};
void delay(unsigned int nCount)	{  //Delays timer by forcing it to cycle through a meaningless loop
  for(; nCount != 0; nCount--);  
}


void disp_char(int cx, int cy, char chr[20][20])  {  //Used to display letters/numbers on LCD screen
	int i=0;
	int j=0;
	
	for(i=0;i<20;i++) {
		for(j=0;j<20;j++) {
			if(chr[19-j][i] == 'A') {
				GLCD_SetTextColor(lcd_colors[0]);
			  GLCD_PutPixel(cy+j, cx+i);
			}
			else if(chr[19-j][i] == 'B') {
				GLCD_SetTextColor(lcd_colors[9]);
			  GLCD_PutPixel(cy+j, cx+i);
			}
			else if(chr[19-j][i] == 'C') {
				GLCD_SetTextColor(lcd_colors[14]);
			  GLCD_PutPixel(cy+j, cx+i);
			}
			else if(chr[19-j][i] == 'D') {
				GLCD_SetTextColor(lcd_colors[12]);
			  GLCD_PutPixel(cy+j, cx+i);
			}
		}
	}
}

void disp_lives(int lives) {  //Used to remove lives displayed on screen and display GAME OVER when out of lives
	int i=0;
	if(lives==1) {
		disp_char(125,290,CLR);
	}

  else if(lives==0) {
		disp_char(105,290,CLR);
	}
	else {
		while(i<160) {
			disp_char(i,230,CLR);
			i+=20;
		}
		disp_char(5,230,G);
		disp_char(24,230,A);
		disp_char(41,230,M);
		disp_char(58,230,E);
		disp_char(86,230,O);
		disp_char(105,230,V);
		disp_char(123,230,E);
		disp_char(140,230,R);
	}
}
		
void disp_stg_clr() {  //Used to display STAGE CLEAR when all pellets have been eaten
  int x=5;
	int i=0;
	while(i<200) {
		disp_char(i,230,CLR);
		i+=20;
	}
	disp_char(5,230,S);
	disp_char(24,230,T);
	disp_char(41,230,A);
	disp_char(58,230,G);
	disp_char(78,230,E);
	disp_char(105+x,230,C);
	disp_char(125+x,230,L);
	disp_char(145+x,230,E);
	disp_char(162+x,230,A);
	disp_char(179+x,230,R);
	
}

void disp_stage_level(int stage) {  //Used to display current stage level
	int x=15;
	int i=0;
	while(i<220) {
		disp_char(i,230,CLR);
		i+=20;
	}
	disp_char(5,230,S);
	disp_char(22,230,T);
	disp_char(39,230,A);
	disp_char(56,230,G);
	disp_char(73,230,E);
	disp_char(90,230,SEMI);
	if(stage==0) {
			disp_char(85+x,230,CLR);
			disp_char(85+x,230,ZERO);
		}
		else if(stage==1) {
			disp_char(85+x,230,CLR);
			disp_char(85+x,230,ONE);
		}
		else if(stage==2) {
			disp_char(85+x,230,CLR);
			disp_char(85+x,230,TWO);
		}
		else if(stage==3) {
			disp_char(85+x,230,CLR);
			disp_char(85+x,230,THREE);
		}
		else if(stage==4) {
			disp_char(85+x,230,CLR);
			disp_char(85+x,230,FOUR);
		}
		else if(stage==5) {
			disp_char(85+x,230,CLR);
			disp_char(85+x,230,FIVE);
		}
		else if(stage==6) {
			disp_char(85+x,230,CLR);
			disp_char(85+x,230,SIX);
		}
		else if(stage==7) {
			disp_char(85+x,230,CLR);
			disp_char(85+x,230,SEVEN);
		}
		else if(stage==8) {
			disp_char(85+x,230,CLR);
			disp_char(85+x,230,EIGHT);
		}
		else if(stage==9) {
			disp_char(85+x,230,CLR);
			disp_char(85+x,230,NINE);
		}
}
	

void disp_score(int score) {  //Used to display current score
	static int scoreA[6];
	int z=0;
	int x=0;
	while(score!=0) {
		scoreA[z] = score % 10;
		score/=10;
		z+=1;
	}
	
	for(z=6; z>-1; z--) {
		if(scoreA[z]==0) {
			disp_char(85+x,260,CLR);
			disp_char(85+x,260,ZERO);
		}
		else if(scoreA[z]==1) {
			disp_char(85+x,260,CLR);
			disp_char(85+x,260,ONE);
		}
		else if(scoreA[z]==2) {
			disp_char(85+x,260,CLR);
			disp_char(85+x,260,TWO);
		}
		else if(scoreA[z]==3) {
			disp_char(85+x,260,CLR);
			disp_char(85+x,260,THREE);
		}
		else if(scoreA[z]==4) {
			disp_char(85+x,260,CLR);
			disp_char(85+x,260,FOUR);
		}
		else if(scoreA[z]==5) {
			disp_char(85+x,260,CLR);
			disp_char(85+x,260,FIVE);
		}
		else if(scoreA[z]==6) {
			disp_char(85+x,260,CLR);
			disp_char(85+x,260,SIX);
		}
		else if(scoreA[z]==7) {
			disp_char(85+x,260,CLR);
			disp_char(85+x,260,SEVEN);
		}
		else if(scoreA[z]==8) {
			disp_char(85+x,260,CLR);
			disp_char(85+x,260,EIGHT);
		}
		else if(scoreA[z]==9) {
			disp_char(85+x,260,CLR);
			disp_char(85+x,260,NINE);
		}
		x+=20;
	}
}


void pacman(int x0, int y0, int color, int dir)  { //draws pacman at coordinates (x0,y0,(0 for erase previous:1 for draw new),orientation)
	int x=0;
	int y=0;
	
	/*Up facing*/
  if(dir==1)  {   
	for(x=0; x<10; x++)
		for(y=0; y<10; y++)
			if(mrs_pacman[9-x][y]=='A')  //black parts of mrs pacman
			{
				GLCD_SetTextColor(lcd_colors[0]);
				GLCD_PutPixel(y+y0-5, x+x0-5);
			}
			else if(mrs_pacman[9-x][y]==12)  //yellow parts of mrs pacman
			{
				if(color==0)  {  //condition for if you want to erase previous mrs pacman
					GLCD_SetTextColor(lcd_colors[0]);
					GLCD_PutPixel(y+y0-5, x+x0-5);					
				}
				else {  //otherwise fill in these pixels in yellow
					GLCD_SetTextColor(lcd_colors[12]);
					GLCD_PutPixel(y+y0-5, x+x0-5);
				}
			}
			else if(mrs_pacman[9-x][y]=='J')  //blue parts of mrs pacman
			{
				if(color==0)  {
					GLCD_SetTextColor(lcd_colors[0]);
					GLCD_PutPixel(y+y0-5, x+x0-5);					
				}
				else {
					GLCD_SetTextColor(lcd_colors[9]);
					GLCD_PutPixel(y+y0-5, x+x0-5);
				}
			}
			else if(mrs_pacman[9-x][y]=='O')  //red parts of mrs pacman
			{
				if(color==0)  {
					GLCD_SetTextColor(lcd_colors[0]);
					GLCD_PutPixel(y+y0-5, x+x0-5);					
				}
				
				else {
					GLCD_SetTextColor(lcd_colors[14]);
					GLCD_PutPixel(y+y0-5, x+x0-5);
				}
			}
		}
		
	/*Right facing*/
	else if(dir==2) {  
	for(x=0; x<10; x++)
		for(y=0; y<10; y++)
			if(mrs_pacman[x][y]=='A')
			{
				GLCD_SetTextColor(lcd_colors[0]);
				GLCD_PutPixel(x+y0-5, y+x0-5);
			}
			else if(mrs_pacman[x][y]=='M')
			{
				if(color==0)  {
					GLCD_SetTextColor(lcd_colors[0]);
					GLCD_PutPixel(x+y0-5, y+x0-5);					
				}
				else {
					GLCD_SetTextColor(lcd_colors[12]);
					GLCD_PutPixel(x+y0-5, y+x0-5);
				}
			}
			else if(mrs_pacman[x][y]=='J')
			{
				if(color==0)  {
					GLCD_SetTextColor(lcd_colors[0]);
					GLCD_PutPixel(x+y0-5, y+x0-5);					
				}
				else {
					GLCD_SetTextColor(lcd_colors[9]);
					GLCD_PutPixel(x+y0-5, y+x0-5);
				}
			}
			else if(mrs_pacman[x][y]=='O')
			{
				if(color==0)  {
					GLCD_SetTextColor(lcd_colors[0]);
					GLCD_PutPixel(x+y0-5, y+x0-5);					
				}
				
				else {
					GLCD_SetTextColor(lcd_colors[14]);
					GLCD_PutPixel(x+y0-5, y+x0-5);
				}
			}
		}
	

	/*Left facing*/
	else if(dir==3)  {
	for(x=0; x<10; x++)
		for(y=0; y<10; y++)
			if(mrs_pacman[x][9-y]=='A')
			{
				GLCD_SetTextColor(lcd_colors[0]);
				GLCD_PutPixel(x+y0-5, y+x0-5);
			}
			else if(mrs_pacman[x][9-y]=='M')
			{
				if(color==0)  {
					GLCD_SetTextColor(lcd_colors[0]);
					GLCD_PutPixel(x+y0-5, y+x0-5);					
				}
				else {
					GLCD_SetTextColor(lcd_colors[12]);
					GLCD_PutPixel(x+y0-5, y+x0-5);
				}
			}
			else if(mrs_pacman[x][9-y]=='J')
			{
				if(color==0)  {
					GLCD_SetTextColor(lcd_colors[0]);
					GLCD_PutPixel(x+y0-5, y+x0-5);					
				}
				else {
					GLCD_SetTextColor(lcd_colors[9]);
					GLCD_PutPixel(x+y0-5, y+x0-5);
				}
			}
			else if(mrs_pacman[x][9-y]=='O')
			{
				if(color==0)  {
					GLCD_SetTextColor(lcd_colors[0]);
					GLCD_PutPixel(x+y0-5, y+x0-5);					
				}
				
				else {
					GLCD_SetTextColor(lcd_colors[14]);
					GLCD_PutPixel(x+y0-5, y+x0-5);
				}
			}
		}
	
	/*Down facing*/
	else if(dir==4)  {
	for(x=0; x<10; x++)
		for(y=0; y<10; y++)
			if(mrs_pacman[x][9-y]=='A')
			{
				GLCD_SetTextColor(lcd_colors[0]);
				GLCD_PutPixel(y+y0-5, x+x0-5);
			}
			else if(mrs_pacman[x][9-y]=='M')
			{
				if(color==0)  {
					GLCD_SetTextColor(lcd_colors[0]);
					GLCD_PutPixel(y+y0-5, x+x0-5);					
				}
				else {
					GLCD_SetTextColor(lcd_colors[12]);
					GLCD_PutPixel(y+y0-5, x+x0-5);
				}
			}
			else if(mrs_pacman[x][9-y]=='J')
			{
				if(color==0)  {
					GLCD_SetTextColor(lcd_colors[0]);
					GLCD_PutPixel(y+y0-5, x+x0-5);					
				}
				else {
					GLCD_SetTextColor(lcd_colors[9]);
					GLCD_PutPixel(y+y0-5, x+x0-5);
				}
			}
			else if(mrs_pacman[x][9-y]=='O')
			{
				if(color==0)  {
					GLCD_SetTextColor(lcd_colors[0]);
					GLCD_PutPixel(y+y0-5, x+x0-5);					
				}
				
				else {
					GLCD_SetTextColor(lcd_colors[14]);
					GLCD_PutPixel(y+y0-5, x+x0-5);
				}
			}
		}
			
			
}
	
	

void draw_pellets() {   //Used to draw pellets across the board
	int a=0, b=0, h=0, w=0, p=0, q=0; 
	for(h=21; h>-1; h--) {
		for(w=0; w<19; w++) {
			if((board[h][w]) == 'C') {
				GLCD_SetTextColor(lcd_colors[3]);
				for(a=9; a>-1; a--) {
					for(b=0; b<10; b++) 
						if((pellet[a][b]) == 'B') 
							GLCD_PutPixel(a+q,b+p);		
				}
			}
			else if((board[h][w]) == 'D') {
				GLCD_SetTextColor(lcd_colors[11]);
					for(a=9; a>-1; a--) {
						for(b=0; b<10; b++) 
							if((S_pellet[a][b]) == 'B') 
								GLCD_PutPixel(a+q,b+p);		
					}
				}
				p+=10;
		}
		p=0;
		q+=10;
	}
}

void draw_ghost(int gx, int gy, int color)  //Used to draw ghosts at (gx,gy,(0 for erase previous:1 for draw new ghost)
{	
	int i=0;
	int j=0;
	for(i=0; i<10; i++)
		for(j=0; j<10; j++)
				if (ghost_shp[i][j]=='A')
				{
					GLCD_SetTextColor(lcd_colors[0]);
					GLCD_PutPixel(i+gy, j+gx);
				}
				else if(ghost_shp[i][j]=='M')      //ghost body                                                   
				{
					GLCD_SetTextColor(lcd_colors[color]); 
					GLCD_PutPixel(i+gy, j+gx);
				}
				else if(ghost_shp[i][j]=='P')   //ghost eye
				{
					if(color!=0)
						GLCD_SetTextColor(lcd_colors[15]);
						GLCD_PutPixel(i+gy, j+gx);
				}
	
}



void board2()  //creates board
{
	int i=0,j=0,h=0,w=0,p=0,q=0;

	GLCD_SetTextColor(lcd_colors[1]);
	for(h=21; h>-1; h--) {
		for(w=0; w<19; w++) {
			if((board[h][w]) == 'B') {
				for (i = 1; i < 10; i++) 
					for (j = 1; j < 10; j++)
						GLCD_PutPixel(i+q,j+p);
			}
			p+=10;
		  }
		p=0;
		q+=10;
		}
		
}

int main (void) 
{

    GLCD_Init();       // Initialize graphical LCD                               
    GLCD_Clear(Black); // Clear graphical LCD display
	
	 /*creates board*/
		board2(); 
	
	/*Creates LIVES: and SCORE: and STAGE:*/
    disp_char(5,290,L);
    disp_char(20,290,I);
	  disp_char(37,290,V);
	  disp_char(54,290,E);
	  disp_char(72,290,S);
	  disp_char(90,290,SEMI);
		disp_char(105,290,pL);
	  disp_char(125,290,pL);	
	  disp_char(5,260,S);
	  disp_char(20,260,C);
	  disp_char(37,260,O);
	  disp_char(54,260,R);
	  disp_char(72,260,E);
		disp_char(90,260,SEMI);
		disp_char(5,230,S);
		disp_char(22,230,T);
		disp_char(39,230,A);
		disp_char(56,230,G);
		disp_char(73,230,E);
		disp_char(90,230,SEMI);
		disp_stage_level(1);
		
		
    // (1) Timer 0 configuration 
    LPC_SC->PCONP |= 1 << 1; // Power up Timer 0 
    LPC_SC->PCLKSEL0 |= 1 << 2; // Clock for timer = CCLK, i.e., CPU Clock (
    LPC_TIM0->MR0 = 1 << 23; // 24: give a value suitable for the LED blinking 
                             // frequency based on the clock frequency 
    LPC_TIM0->MCR |= 1 << 0; // Interrupt on Match 0 compare 
    LPC_TIM0->MCR |= 1 << 1; // Reset timer on Match 0    
    LPC_TIM0->TCR |= 1 << 1; // Manually Reset Timer 0 (forced); 
    LPC_TIM0->TCR &= ~(1 << 1); // Stop resetting the timer 
	
    // (2) Enable timer interrupt; 
    NVIC_EnableIRQ(TIMER0_IRQn);

    // (3) More one-time deals;  
    LPC_TIM0->TCR |= 1 << 0; // Start timer 
    LPC_SC->PCONP |= ( 1 << 15 ); // Power up GPIO 
    LPC_GPIO1->FIODIR |= 1 << 29; // Put P1.29 into output mode. LED is connected to P1.29
		
    /*Loops until pacman runs out of lives*/
    while (end == 1) {
			//do nothing
    }
		
}

void TIMER0_IRQHandler(void)
{
		static int x0=95, y0=55;  //variables controlling where pacman is
	  static int i=0,j=0;
		static int last_x0=95, last_y0=55;  //variables that control pacman's movement
		static int prp ,pcp, prm, pcm;  //variables that control where walls are for pacman
		static int clk = 0;
	  static int random_maker = 1;   //used to make ghosts' movements more random
	  static int lives=2;    
	  static int s_pellet_pow[4] = {1,1,1,1};  //variable keeps track which power pellets have not been eaten
		static int stop_pellet_pow[4] = {1,1,1,1};  //variable prevents pacman from getting super pellet power more than 4 times per stage
		static int ten_sec=0;  //variable responsible for starting power pellet power 
		static int ten_sec_count=200;  //115//amount of time pacman gets to catch ghosts after eating power pellet
		static int dir=2;  //variable that determines pacman's orientation (U,R,L,D)
		static int pcounter=0;  //variable that is used to check if all pellets have been eaten
		static int g_caught=2;  //points multiplier for power pellet
		static int stage=1;  //variable that keeps track of curret stage

		  // 0	1		2				3				4			5		6		7		8		9					10
		//{gx,gy,last_gx,last_gy,color,grp,gcp,grm,gcm,last_move,r_move}
		static int ghostA[4][12] = {
			{90,130,90,130,12,0,0,0,0,0,0,1},  //red ghost
			{90,90,90,90,13,0,0,0,0,0,0,1},    //magenta ghost
			{60,110,60,110,10,0,0,0,0,0,0,1},  //olive ghost
			{120,110,120,110,2,0,0,0,0,0,0,1}  //dark green ghost
			};
	

    if ( (LPC_TIM0->IR & 0x01) == 0x01 ) // if MR0 interrupt 
    {
        LPC_TIM0->IR |= 1 << 0; // Clear MR0 interrupt flag 
        LPC_GPIO1->FIOPIN ^= 1 << 29; // toggle the P0.29 LED;
			
			
			draw_pellets();  //draws pellets that remain on board
			
			/*Makes Joystick Work*/
			LPC_GPIO1->FIODIR &= ~((1<<25)|(1<<26)|(1<<27)|(1<<28)|(1<<29));
			kbd_val = (LPC_GPIO1->FIOPIN >> 24) & 0x3E;
			
			
			  



/*************************************START GHOST MOVEMENT STUFF*****************************************/			
		
for(i=0; i<stage; i++) {   //responsible for speeding up ghosts in later stages
			
		/*Gives values that check if there is wall next to a ghost*/			
		for(j=0;j<4;j++) {
			ghostA[j][5] = (ghostA[j][3]%10 == 0) ? (21-(ghostA[j][3]/10)):(22-((ghostA[j][3]-5)/10));  //gives correct row of board[pr][] for up+right
			ghostA[j][6] = (ghostA[j][2]%10 == 0) ? ((ghostA[j][2]/10)):(((ghostA[j][2]-5)/10));  //gives correct col of board[][pc] for up+right
			ghostA[j][7] = (ghostA[j][3]%10 == 0) ? (21-(ghostA[j][3]/10)):((21-((ghostA[j][3]+5)/10)));  //gives correct row of board[pr][] for left+down
			ghostA[j][8] = (ghostA[j][2]%10 == 0) ? ((ghostA[j][2]/10)):(((ghostA[j][2]+5)/10));  //gives correct col of board[][pc] for left and down
		}
		
		/*Erases previous ghosts*/
		for(j=0;j<4;j++) {
			draw_ghost(ghostA[j][0],ghostA[j][1],0);
			}
		
		/*Semi-randomly moves ghosts around*/
		for(j=0;j<4;j++) {
				GLCD_SetTextColor(lcd_colors[ghostA[j][4]]);
				ghostA[j][0] = ghostA[j][2];
				ghostA[j][1] = ghostA[j][3];
				draw_ghost(ghostA[j][0],ghostA[j][1],ghostA[j][4]);
			}
	
		/*Makes the movement more random*/
		for(j=0;j<4;j++) {
			srand(random_maker+clk*(j+1));
			ghostA[j][10] = ((rand() % 4)+1);
		}
			
		/*Ghost moves up*/	
		for(j=0;j<4;j++) {
			if((board[ghostA[j][5]-1][ghostA[j][6]]!='B') & ((ghostA[j][0]%10!=5) | (ghostA[j][1]%10!=0))) {  //check for wall above
				if(ghostA[j][10] == 1) {  //ghost move up
					if(ghostA[j][9] != 4) {  //checks previous movement
						ghostA[j][3]+=5;
						ghostA[j][9]=1;
					}
				}
			}
		}
		
		/*Ghost moves right*/	
		for(j=0;j<4;j++) {
				/*Moves ghost to other side if it goes through right exit*/
				if((ghostA[j][7]==10) & (ghostA[j][8]==18))  {
					if(ghostA[j][9]==2) {
						ghostA[j][2]=0;
						ghostA[j][9]=2;
					}
				}
				else if((board[ghostA[j][5]][ghostA[j][6]+1] != 'B') & ((ghostA[j][0]%10!=0) | (ghostA[j][1]%10!=5))) {  //check for wall to the right
					if(ghostA[j][10] == 2) {  //ghost move right
						if(ghostA[j][9] != 3) {  //checks previous movement
							ghostA[j][2]+=5;
							ghostA[j][9]=2;
						}
					}
				}
		}
			
		/*Ghost moves left*/
		for(j=0;j<4;j++) {
				/*Moves ghost to other side if it goes through left exit*/
				if((ghostA[j][7]==10) & (ghostA[j][8]==0))  {
					if(ghostA[j][9]==3) {
						ghostA[j][2]=180;
						ghostA[j][9]=3;
					}
				}
				else if((board[ghostA[j][7]][ghostA[j][8]-1] != 'B') & ((ghostA[j][0]%10!=0) | (ghostA[j][1]%10!=5))) {  //check for wall to the left
					if(ghostA[j][10] == 3) {  //ghost move left
						if(ghostA[j][9] != 2) {  //checks previous movement
							ghostA[j][2]-=5;
							ghostA[j][9]=3;
						}
					}
				}
		}
		
		/*Ghost move down*/
		for(j=0;j<4;j++) {	
			if((board[ghostA[j][7]+1][ghostA[j][8]] != 'B') & ((ghostA[j][0]%10!=5) | (ghostA[j][1]%10!=0))) {  //check for wall below	
				if(ghostA[j][10] == 4) {  //ghost move down
					if(ghostA[j][9] != 1) {  //checks previous movement
						ghostA[j][3]-=5;
						ghostA[j][9]=4;
					}
				}
			}
		}
}
/*********************************************END GHOST MOVEMENT***************************************************/			
			
/**********************************************START PACMAN MOVEMENT***********************************************/				
			/*Gives values to variables used to check if there is a wall next to pacman*/
			prp = (last_y0%10 == 0) ? (22-(last_y0/10)):(22-((last_y0+5)/10));  //gives correct row of board[pr][] for up+right
			pcp = (last_x0%10 == 0) ? ((last_x0/10)-1):(((last_x0-5)/10));  //gives correct col of board[][pc] for up+right
			prm = (last_y0%10 == 0) ? (21-(last_y0/10)):((22-((last_y0+5)/10)));  //gives correct row of board[pr][] for left+down
			pcm = (last_x0%10 == 0) ? ((last_x0/10)):(((last_x0-5)/10));  //gives correct col of board[][pc] for left and down

			/*What pacman does when joystick is in neutral position*/
			if(kbd_val == 0x3E) {  //check if joystick in neutral position 
				pacman(x0,y0,0,dir);
				
				x0=last_x0;
				y0=last_y0;
				pacman(x0,y0,1,dir);
			}
			
			/*What pacman does if joystick is in up position*/
			if((board[prp-1][pcp]!='B') & ((x0%10!=0) | (y0%10!=5))) {  //check for wall above
				if(kbd_val == 0x1E) {  //check if joystick in up position
					pacman(x0,y0,0,dir);  //erases previous
					random_maker *= 3;  //used to make ghost movement different every game
					
					last_y0+=5;
					x0=last_x0;
					y0=last_y0;
					dir=1;
					pacman(x0,y0,1,dir);  //redraws pacman in new x0,y0 position
				}
			}
		
			/*Joystick in Right Position*/
			if(kbd_val == 0x2E) {  //check if joystick in right position
				/*What pacman does if joystick is in right position*/
				if((board[prp][pcp+1] != 'B') & ((x0%10!=5) | (y0%10!=0))) {  //check for wall to the right
						pacman(x0,y0,0,dir);
						random_maker *= 13;		
					
						last_x0+=5;
						x0=last_x0;
						y0 = last_y0;
					  dir=2;
						pacman(x0,y0,1,dir);
					}
				/*Moves ghost to other side if it goes through left exit*/
				else if((prm==10) & (pcm==18))  {
					last_x0=5;
				}
			}
			
			/*Joystick in Left Position*/
			if(kbd_val == 0x36) {  //check if joystick in left position
				/*Moves ghost to other side if it goes through left exit*/
				if((prm==10) & (pcm==0))  {
					last_x0=185;
				}
				/*What pacman does when joystick is in left position*/
				else if((board[prm][pcm-1] != 'B') & ((x0%10!=5) | (y0%10!=0))) {  //check for wall to the left
						pacman(x0,y0,0,dir);
						random_maker *= 5;
					
						last_x0-=5;
						x0=last_x0;
						y0=last_y0;
					  dir=3;
						pacman(x0,y0,1,dir);
					}
			}
			
			/*What pacman does when joystick is in down position*/
			if((board[prm+1][pcm] != 'B') & ((x0%10!=0) | (y0%10!=5))) {  //check for wall below
				if(kbd_val == 0x3A) {  //check if joystick in down position
					pacman(x0,y0,0,dir);
					random_maker *= 2;
					
					last_y0-=5;
					x0=last_x0;
					y0=last_y0;
					dir=4;
					pacman(x0,y0,1,dir);
				}
			}
			
			/*What happens when pacman eats a pellet*/
			  if(board[prp][pcp]!='Z' & board[prp][pcp]!='A')  {
					score+=10;
					board[prp][pcp]='Z';  //marks where pellets were where pacman has already been to prevent extra +10 score
				}

/**********************************************END PACMAN MOVEMENT********************************************/			
			
/**********************************************START SUPER PELLET POWER*********************************************/

			/*Change all the ghosts to white color for 10sec*/
			if((board[2][1]=='Z') & (s_pellet_pow[0]!=0)) {  //top left power pellet
				ghostA[0][4] = 15;  //changes red ghost to white
				ghostA[1][4] = 15;  //changes megenta ghost to white
			  ghostA[2][4] = 15;  //changes olive ghost to white
			  ghostA[3][4] = 15;  //changes dark green ghost to white
				s_pellet_pow[0]=0;
				score+=40;
				ten_sec=1;  //resets ten_sec count if second power pellet is eaten before first one ends
			}
			if((board[16][1]=='Z') & (s_pellet_pow[1]!=0)) {  //top right power pellet
				ghostA[0][4] = 15;
				ghostA[1][4] = 15;
			  ghostA[2][4] = 15;
			  ghostA[3][4] = 15;
				s_pellet_pow[1]=0;
				score+=40;
				ten_sec=1;
			}
			if((board[2][17]=='Z') & (s_pellet_pow[2]!=0)) {  //bottom left power pellet
				ghostA[0][4] = 15;
				ghostA[1][4] = 15;
			  ghostA[2][4] = 15;
			  ghostA[3][4] = 15;
				s_pellet_pow[2]=0;
				score+=40;
				ten_sec=1;
			}
			if((board[16][17]=='Z') & (s_pellet_pow[3]!=0)) {  //bottom right power pellet
				ghostA[0][4] = 15;
				ghostA[1][4] = 15;
			  ghostA[2][4] = 15;
			  ghostA[3][4] = 15;
				s_pellet_pow[3]=0;
				score+=40;
				ten_sec=1;
			}
				
		/*Start the 10 sec counter*/
		if((board[2][1]=='Z') & (s_pellet_pow[0]==0) & (stop_pellet_pow[0]==1)) {
			ten_sec+=1;		
			}
		if((board[16][1]=='Z') & (s_pellet_pow[1]==0) & (stop_pellet_pow[1]==1)) {
			ten_sec+=1;
			}
		if((board[2][17]=='Z') & (s_pellet_pow[2]==0) & (stop_pellet_pow[2]==1)) {
			ten_sec+=1;
		}
		if((board[16][17]=='Z') & (s_pellet_pow[3]==0) & (stop_pellet_pow[3]==1)) {
			ten_sec+=1;
			}
		
		 /*If pacman catches ghost within 10 sec*/
		  if((ten_sec<ten_sec_count) & (ten_sec>0)) {
				for(j=0;j<4;j++)  {
					if((prm==ghostA[j][7]) & (pcm==ghostA[j][8]) & (ghostA[j][11]==1)){
						delay(10000000);
						ghostA[j][2]=90;  //resets ghost's x-coordiate to itital
						ghostA[j][3]=130;  //resets ghost's y-coordiate to initial
						score+=100*g_caught;
						g_caught*=2;  //doubles the points received for each subsequent ghost caught
						if(j==0) {
							ghostA[j][11]=0;
							ghostA[j][4] = 12;
						}
						if(j==1) {
							ghostA[j][11]=0;
							ghostA[j][4] = 13;
						}
						if(j==2) {
							ghostA[j][11]=0;
							ghostA[j][4] = 10;
						}
						if(j==3) {
							ghostA[j][11]=0;
							ghostA[j][4] = 4;
						}
						
					}
				}
			}

			
			
		/*Turns ghosts back to normal after 10 sec*/
		if(ten_sec>ten_sec_count) {   
			/*Resets colors*/
			ghostA[0][4] = 12;
			ghostA[1][4] = 13;
			ghostA[2][4] = 10;
			ghostA[3][4] = 4;
			
			for(j=0;j<4;j++)  {
				ghostA[j][11]=1;
			}
			
			ten_sec=0;   //resets ten_sec counter
			g_caught=2;  //resets ghost catching doubler
			
			/*Makes it so ghosts can only be caught 4 times per stage*/
			if(s_pellet_pow[0]==0)
				stop_pellet_pow[0]=0;
			if(s_pellet_pow[1]==0)
				stop_pellet_pow[1]=0;
			if(s_pellet_pow[2]==0)
				stop_pellet_pow[2]=0;
			if(s_pellet_pow[3]==0)
				stop_pellet_pow[3]=0;			
		}
/***********************************************END SUPER PELLET POWER**********************************************/			
			
/**********************************************START LIVES/GAME OVER****************************************************/			
		/*Responsible for pacman's lives+reseting pacman to inital position when caught by ghost*/
		for(j=0;j<4;j++)  {
			if((prm==ghostA[j][7]) & (pcm==ghostA[j][8]) & (ten_sec==0)) {  //"if pacman and ghost are in same place and pacman does not have power pellet"
				last_x0=95;
				last_y0=55;
				delay(20000000);
				lives-=1;
				disp_lives(lives);
				for(j=0;j<4;j++) {
				draw_ghost(ghostA[j][0],ghostA[j][1],0);
				for(i=0;i<11;i++) {
					ghostA[j][i] = init_ghostA[j][i];
				}
			}
			}
		}
			
		/*Ends the game when lives = 0*/
		if(lives < 0) {
			end=0;
		}
/********************************************END LIVES/GAME OVER*******************************************************/
	
	
/************************************START STAGE CLEAR/NEXT STAGE********************************************/	
		pcounter=0;
		for(j=21; j>-1; j--) 
			for(i=0; i<19; i++) 
				if((board[j][i]) == 'Z') {
					pcounter+=1;
				}
		if(pcounter==157) {	
			disp_stg_clr();
		}
		/*Resets everything necessary to start next stage*/
		if(pcounter==157) {
			delay(100000000);
			for(j=21; j>-1; j--) {
				for(i=0; i<19; i++) {
					board[j][i] = init_board[j][i];
				}
			}
			for(i=0;i<4;i++) {
				s_pellet_pow[i] = 1;
				stop_pellet_pow[i]=1;
			}
			for(j=0;j<4;j++) {
				draw_ghost(ghostA[j][0],ghostA[j][1],0);
				for(i=0;i<11;i++) {
					ghostA[j][i] = init_ghostA[j][i];
				}
			}
			pacman(x0,y0,0,dir);
			x0=95;
			y0=55;
			last_x0=95;
			last_y0=55;
			dir=2;
			pcounter=0;
			ten_sec_count = ten_sec_count - stage*5;  //decreases amount of time pacman has to catch ghost
			stage+=1;
			disp_stage_level(stage);
			delay(1000000);
		}
/************************************END STAGE CLEAR/NEXT STAGE********************************************/	

	disp_score(score);
	clk+=1;
		
	}//End of timer interrupt cycle
}
